package com.infy.controller;

import java.util.List;
import org.springframework.core.env.Environment;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.server.ResponseStatusException;
import com.infy.dto.CustomerDTO;
import com.infy.dto.MobileDTO;
import com.infy.service.CustomerService;
import com.infy.service.MobileService;

//import antlr.collections.List;

//DONT MODIFY NAME OF CLASS
//DONT ADD/MODIFY/DELETE/COMMENT ANY METHOD
//DONT DELETE/MODIFY INSTANCE VARIABLE(IF PRESENT)
//DONT MODIFY ANNOTATIONS(IF PRESENT)
@RestController
@RequestMapping(value = "/infymobile")
public class MobileAppAPI {
	
	@Autowired
	private MobileService mobileService;
	@Autowired
	private CustomerService customerService;
	@Autowired
	public Environment environment;
	
	@GetMapping(value = "/mobile")
		public ResponseEntity<List<MobileDTO>> getCustomerDetails() throws Exception {
			try {
				List<MobileDTO> mobileDTOs = mobileService.getMobileDetails();
		return  new ResponseEntity<>(mobileDTOs, HttpStatus.OK);
		} 		catch(Exception exception) {
		throw new ResponseStatusException(HttpStatus.NOT_FOUND,environment.getProperty(exception.getMessage()),exception);
			}}
	
	@GetMapping(value = "/customer")
	public ResponseEntity<List<CustomerDTO>> getAllCustomerDetails() throws Exception {
		try {
		List<CustomerDTO> customerList = customerService.getCustomerDetails();
		return  new ResponseEntity<>(customerList, HttpStatus.OK);
		} 		catch(Exception exception) {
			throw new ResponseStatusException(HttpStatus.NOT_FOUND,environment.getProperty(exception.getMessage()),exception);
				}}
	
	@GetMapping(value = "/customer/{customerId}")
	public ResponseEntity<CustomerDTO> getCustomerDetails(@PathVariable Integer customerId) throws Exception {
		try {
		CustomerDTO customer = customerService.getCustomer(customerId);
		return new ResponseEntity<>(customer, HttpStatus.OK);
		} catch(Exception exception) {
			throw new ResponseStatusException(HttpStatus.NOT_FOUND,environment.getProperty(exception.getMessage()),exception);
		}}}
